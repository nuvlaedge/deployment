apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.coreComponentName }}-deployment
  namespace: {{ include "nuvlabox-engine.namespace" . }}
  labels:
    {{- include "nuvlabox-engine.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      component: {{ .Values.coreComponentName }}
  template:
    metadata:
      labels:
        component: {{ .Values.coreComponentName }}
        {{- include "nuvlabox-engine.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.kubernetesNode }}
      containers:
        # AGENT
        - name: agent
          image: "{{ .Values.images.agent.repository }}:{{ .Values.images.agent.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.images.agent.pullPolicy }}
          securityContext:
            privileged: true
          env:
            - name: NUVLABOX_UUID
              value: {{ .Values.NUVLABOX_UUID }}
            - name: NUVLABOX_ENGINE_VERSION
              value: "2.0.0"
            - name: NUVLABOX_IMMUTABLE_SSH_PUB_KEY
              value: {{ .Values.NUVLABOX_IMMUTABLE_SSH_PUB_KEY }}
            - name: NUVLA_ENDPOINT
              value: {{ .Values.NUVLA_ENDPOINT | default "nuvla.io" | quote }}
            - name: NUVLA_ENDPOINT_INSECURE
              value: {{ .Values.NUVLA_ENDPOINT_INSECURE | default "False" | quote }}
            - name: NUVLABOX_JOB_ENGINE_LITE_IMAGE
              value: "{{ .Values.images.jobEngineLite.repository }}:{{ .Values.images.jobEngineLite.tag }}"
            - name: NUVLABOX_VPN_COMPONENT_NAME
              value: {{ .Values.vpnClientComponentName }}
            - name: HOST_HOME
              value: {{ .Values.HOME }}
            - name: VPN_INTERFACE_NAME
              value: {{ .Values.VPN_INTERFACE_NAME | default "vpn" | quote }}
            - name: MY_HOST_NODE_IP
              value: status.hostIP
            - name: MY_HOST_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_NAMESPACE
              value: {{ include "nuvlabox-engine.namespace" . }}
          ports:
            - containerPort: 80
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost/api/healthcheck
            initialDelaySeconds: 10
            periodSeconds: 30
          volumeMounts:
            - mountPath: /rootfs
              name: rootfs
              readOnly: true
            - mountPath: /srv/nuvlabox/shared
              name: nuvlabox-db

        # DATAGATEWAY
        - name: data-gateway
          image: "{{ .Values.images.dataGateway.repository }}:{{ .Values.images.dataGateway.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.images.dataGateway.pullPolicy }}
          command:
            - sh
            - -c
            - "sleep 10 && /usr/sbin/mosquitto -c /mosquitto/config/mosquitto.conf"
          ports:
            - containerPort: 1883
          volumeMounts:
            - mountPath: /mosquitto/config/
              name: data-gateway-config

        # K8S CREDENTIAL MANAGER
        - name: kubernetes-credentials-manager
          image: "{{ .Values.images.kubernetesCredentialsManager.repository }}:{{ .Values.images.kubernetesCredentialsManager.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.images.kubernetesCredentialsManager.pullPolicy }}
          volumeMounts:
            - mountPath: /srv/nuvlabox/shared
              name: nuvlabox-db

        # SYSTEM MANAGER
        - name: system-manager
          image: "{{ .Values.images.systemManager.repository }}:{{ .Values.images.systemManager.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.images.systemManager.pullPolicy }}
          env:
            - name: SKIP_MINIMUM_REQUIREMENTS
              value: {{ .Values.SKIP_MINIMUM_REQUIREMENTS | default "False" | quote }}
            - name: MY_HOST_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_NAMESPACE
              value: {{ include "nuvlabox-engine.namespace" . }}
          ports:
            - containerPort: 3636
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:3636
            initialDelaySeconds: 10
            periodSeconds: 30
          volumeMounts:
            - mountPath: /rootfs
              name: rootfs
              readOnly: true
            - mountPath: /srv/nuvlabox/shared
              name: nuvlabox-db


      ## VOLUMES
      volumes:
        - name: rootfs
          hostPath:
            path: /
        - name: nuvlabox-db
          emptyDir: {}
        - name: data-gateway-config
          configMap:
            name: data-gateway

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpn-client-deployment
  namespace: {{ include "nuvlabox-engine.namespace" . }}
  labels:
    {{- include "nuvlabox-engine.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: {{ .Values.vpnClientComponentName }}
  template:
    metadata:
      labels:
        component: {{ .Values.vpnClientComponentName }}
        {{- include "nuvlabox-engine.labels" . | nindent 8 }}
    spec:
      hostNetwork: true
      serviceAccountName: {{ .Values.serviceAccount.name }}
      dnsPolicy: ClusterFirstWithHostNet
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.kubernetesNode }}
      containers:
        - name: {{ .Values.vpnClientComponentName }}
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
          image: "{{ .Values.images.vpnClient.repository }}:{{ .Values.images.vpnClient.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.images.vpnClient.pullPolicy }}
          livenessProbe:
            exec:
              command:
                - ls
                - /dev/net/tun
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - mountPath: /dev/net/tun
              name: dev-tun
      volumes:
        - name: dev-tun
          hostPath:
            path: /dev/net/tun
            type: CharDevice
