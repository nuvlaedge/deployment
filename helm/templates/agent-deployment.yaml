apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent
  namespace: {{ include "nuvlaedge.namespace" . }}
  labels:
    {{- include "nuvlaedge.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      component: agent
  revisionHistoryLimit: {{ .Values.deploymentRevHistLimit }} # Default to 10 if not specified
  template:
    metadata:
      labels:
        component: agent
        {{- include "nuvlaedge.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.kubernetesNode }}
      containers:
        # AGENT
        - name: agent
          command: ["agent"]
          image: "{{ .Values.nuvlaedge.image.registry }}{{ .Values.nuvlaedge.image.organization }}/{{ .Values.nuvlaedge.image.repository }}:{{ .Values.nuvlaedge.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.nuvlaedge.pullPolicy }}
          securityContext:
            privileged: true
          env:
            - name: NUVLAEDGE_UUID
              value: {{ .Values.NUVLAEDGE_UUID }}
            - name: NUVLAEDGE_IMAGE
              value: "{{ .Values.nuvlaedge.image.registry }}{{ .Values.nuvlaedge.image.organization }}/{{ .Values.nuvlaedge.image.repository }}:{{ .Values.nuvlaedge.image.tag | default .Chart.AppVersion }}"
            - name: NUVLAEDGE_EXCLUDED_MONITORS
              value: {{ .Values.NUVLAEDGE_EXCLUDED_MONITORS | default .Values.agentConfig.excluded_monitors }}
            - name: NUVLAEDGE_THREAD_MONITORS
              value: {{ .Values.NUVLAEDGE_THREAD_MONITORS | default "False" | quote }}
            - name: NUVLAEDGE_IMMUTABLE_SSH_PUB_KEY
              value: {{ .Values.NUVLAEDGE_IMMUTABLE_SSH_PUB_KEY }}
            - name: NUVLAEDGE_EXEC_JOBS_IN_AGENT
              value: {{ .Values.NUVLAEDGE_EXEC_JOBS_IN_AGENT | default "True" | quote }}
            - name: NUVLAEDGE_LOG_LEVEL
              value: {{ .Values.NUVLAEDGE_LOG_LEVEL | default .Values.agentConfig.log_level }}
            - name: NUVLAEDGE_DEBUG
              value: {{ .Values.NUVLAEDGE_DEBUG | default "False" | quote }}
            - name: NUVLAEDGE_API_KEY
              value: {{ .Values.NUVLAEDGE_API_KEY }}
            - name: NUVLAEDGE_API_SECRET
              value: {{ .Values.NUVLAEDGE_API_SECRET }}
            - name: NUVLA_ENDPOINT
              value: {{ .Values.NUVLA_ENDPOINT | default "nuvla.io" | quote }}
            - name: NUVLA_ENDPOINT_INSECURE
              value: {{ .Values.NUVLA_ENDPOINT_INSECURE | default "False" | quote }}
            - name: NUVLAEDGE_JOB_ENGINE_LITE_IMAGE
              value: {{ .Values.NUVLAEDGE_JOB_ENGINE_LITE_IMAGE | default (print .Values.nuvlaedge.image.registry .Values.nuvlaedge.image.organization "/" .Values.nuvlaedge.image.repository ":" (.Values.nuvlaedge.image.tag | default .Chart.AppVersion)) | quote }}
            - name: NUVLAEDGE_VPN_COMPONENT_NAME
              value: {{ .Values.vpnClientComponentName }}
            - name: HOST_HOME
              value: {{ .Values.HOME }}
            - name: VPN_INTERFACE_NAME
              value: {{ .Values.VPN_INTERFACE_NAME | default "vpn" | quote }}
            - name: VPN_CONFIG_EXTRA
              value: {{ .Values.VPN_CONFIG_EXTRA }}
            - name: JOB_IMAGE_PULL_POLICY
              value: {{ .Values.JOB_IMAGE_PULL_POLICY | default "Always" | quote }}
            - name: JOB_LOCAL_TIMEOUT
              value: {{ .Values.JOB_LOCAL_TIMEOUT }}
            - name: JOB_LOG_LEVEL
              value: {{ .Values.JOB_LOG_LEVEL }}
            - name: MY_HOST_NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: MY_HOST_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_NAMESPACE
              value: {{ include "nuvlaedge.namespace" . }}
          volumeMounts:
            - mountPath: /rootfs
              name: rootfs
              readOnly: true
            - mountPath: /var/lib/nuvlaedge
              name: nuvlaedge-data
            - mountPath: /var/log/nuvlaedge
              name: nuvlaedge-logs


      ## VOLUMES
      volumes:
        - name: rootfs
          hostPath:
            path: /
        - name: nuvlaedge-logs
          hostPath:
            path: {{ .Values.nuvlaedgeLogsVolumePath }}/{{ include "nuvlaedge.namespace" . }}
        - name: nuvlaedge-data
          hostPath:
            path: {{ .Values.nuvlaedgeVolumeHostPath }}/{{ include "nuvlaedge.namespace" . }}/data
