{{- if .Values.peripheralManagerUSB }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: peripheral-manager-usb-deployment
  namespace: {{ include "nuvlaedge.namespace" . }}
  labels:
    {{- include "nuvlaedge.labels" . | nindent 4 }}
    {{- include "nuvlaedge.peripheral-manager.labels" . | nindent 4 }}
    nuvlaedge.peripheral.type: usb
spec:
  selector:
    matchLabels:
      component: peripheral-manager-usb
  template:
    metadata:
      labels:
        component: peripheral-manager-usb
        {{- include "nuvlaedge.labels" . | nindent 8 }}
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.kubernetesNode }}
      containers:
        - name: peripheral-manager-usb
          command: ["usb"]
          image: "{{ .Values.nuvlaedge.image.registry }}{{ .Values.nuvlaedge.image.organization }}/{{ .Values.nuvlaedge.image.repository }}:{{ .Values.nuvlaedge.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.nuvlaedge.pullPolicy }}
          env:
            - name: MY_NAMESPACE
              value: {{ include "nuvlaedge.namespace" . }}
          livenessProbe:
            exec:
              command:
                - ls
                - /dev
            initialDelaySeconds: 5
            periodSeconds: 5
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /srv/nuvlaedge/shared
              name: nuvlaedge-db
            - mountPath: /dev
              name: dev
            - mountPath: /run/udev/control
              name: udev
              readOnly: true
      volumes:
        - name: nuvlaedge-db
          hostPath:
            path: {{ .Values.nuvlaedgeVolumeHostPath }}/{{ include "nuvlaedge.namespace" . }}
        - hostPath:
            path: /dev
          name: dev
        - hostPath:
            path: /run/udev/control
            type: Socket
          name: udev
{{- end }}
