name: "NuvlaBox Local Integration Testing"

on:
  push:
    branches:
      - cicd
  # workflow_run:
  #   workflows: ["NuvlaBox Installer Build"]
  #   branches: [master]
  #   types:
  #     - completed

env:
  NUVLA_DEV_APIKEY: ${{ secrets.NUVLA_DEV_APIKEY }}
  NUVLA_DEV_APISECRET: ${{ secrets.NUVLA_DEV_APISECRET }}
  SNYK_SIXSQCI_API_TOKEN: ${{ secrets.SNYK_SIXSQCI_API_TOKEN }}

defaults:
  run:
    shell: bash
    working-directory: tests/integration_tests

jobs:
  tester:
    name: "Run NuvlaBox Integration Tests"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup local environment
        run: |
          python --version
          pip --version
          sudo npm install -g snyk
          snyk version
          sudo apt-get install -y python3-pytest
          pip install -r requirements.txt

      - name: Test vulnerabilities
        if: ${{ success() }}
        id: ImageScan
        run: |
          python -m pytest -vv -x --html=nuvlabox.vulnerabilities-scan.output.html --self-contained-html vulnerability-scan.py

      - name: Create Test NuvlaBox in Nuvla.io
        if: ${{ success() }}
        id: NewNuvlaBox
        uses: nuvla/nuvla-create-nuvlabox-action@v2
        with:
          api-key: ${{ secrets.NUVLA_DEV_APIKEY }}
          api-secret: ${{ secrets.NUVLA_DEV_APISECRET }}
          name: "(local) Test NuvlaBox"
          description: NuvlaBox for integration testing - commit ${{ github.sha }}, on branch ${{ github.ref }}, by ${{ github.actor }}

      - name: Run integration tests locally
        if: ${{ success() }}
        env:
          NUVLABOX_ID: ${{ steps.NewNuvlaBox.outputs.NUVLABOX_UUID }}
        run: |
          python -m pytest -vv -x --html=nuvlabox.test-local.output.html --self-contained-html test-local.py

      - if: always()
        name: Keep test results
        uses: actions/upload-artifact@v2
        with:
          name: integration-tests-report
          path: tests/integration_tests/nuvlabox.*.output.html

      - if: always()
        name: Cleanup Nuvla resources
        env:
          NUVLABOX_IDS: ${{ steps.NewNuvlaBox.outputs.NUVLABOX_UUID }}
        run: cd .. && python cleanup.py

  notify:
    if: always()
    name: Post Workflow Status To Slack
    needs: tester
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          # Required Input
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_NBE_CICD_WEBHOOK }}
          include_jobs: true
