#!/usr/bin/env python3

import json
import logging
import os
import yaml


def test_snyk_score(request):
    logging.info('Running Snyk scan with the API token provided from the environment')
    snyktoken = os.getenv('SNYK_SIXSQCI_API_TOKEN')
    assert snyktoken is not None, 'Invalid Snyk token provided'

    images = []
    services = []
    for file in os.listdir('../'):
        if not (file.startswith('docker-compose.') and file.endswith('.yml')):
            continue

        with open("../" + file) as compose_file:
            content = yaml.safe_load(compose_file)
            for service, values in content['services'].items():
                images.append(values['image'])
                services.append(service)

    logging.info(f'Scanning the following images for vulnerabilities: {", ".join(images)}')
    print(f'::set-output name=services::{",".join(services)}')
    total_high_vulnerabilities = 0

    # count of current high vulnerabilities
    reference_vulnerabilities = 35
    log_file = 'log.json'
    for img in images:
        os.system(f'SNYK_TOKEN={snyktoken} snyk container test --docker {img} --json --severity-threshold=high > {log_file}')
        with open(log_file) as l:
            out = json.load(l)

        total_high_vulnerabilities += out['uniqueCount']

    assert total_high_vulnerabilities <= reference_vulnerabilities, \
        f'Snyk scan detected more high vulnerabilities ({total_high_vulnerabilities}) ' \
            f'than expected ({reference_vulnerabilities})'
    logging.info(f'Snyk: number of high vulnerabilities found ({total_high_vulnerabilities}) is not higher '
                f'than previous tests ({reference_vulnerabilities})')

