version: "3.7"

x-common: &common
  image: ${NE_IMAGE_REGISTRY:-}${NE_IMAGE_ORGANIZATION:-sixsq}/${NE_IMAGE_REPOSITORY:-nuvlaedge}:${NE_IMAGE_TAG:-2.10.0}
  stop_grace_period: 5s
  logging:
    options:
      max-size: "250k"
      max-file: "10"
  labels:
    - "nuvlaedge.component=True"
    - "nuvlaedge.deployment=production"


volumes:
  nuvlabox-db:
    driver: local
    labels:
      - "nuvlaedge.volume=True"
      - "nuvlaedge.deployment=production"

services:
  system-manager:
    <<: *common
    entrypoint: system-manager
    restart: always
    container_name: ${COMPOSE_PROJECT_NAME:-nuvlaedge}-system-manager
    environment:
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME:-nuvlaedge}
      - NUVLAEDGE_LOG_LEVEL=${NUVLAEDGE_LOG_LEVEL:-INFO}
      - NUVLAEDGE_DATA_GATEWAY_NAME=${NUVLAEDGE_DATA_GATEWAY_NAME:-data-gateway}
      - NUVLAEDGE_DATA_GATEWAY_ENABLED=${NUVLAEDGE_DATA_GATEWAY_ENABLED:-True}
      - NUVLAEDGE_DATA_GATEWAY_IMAGE=${NUVLAEDGE_DATA_GATEWAY_IMAGE:-eclipse-mosquitto:2.0.15-openssl}
      - SKIP_MINIMUM_REQUIREMENTS=${SKIP_MINIMUM_REQUIREMENTS:-False}
      - NE_IMAGE_REGISTRY
      - NE_IMAGE_ORGANIZATION
      - NE_IMAGE_REPOSITORY
      - NE_IMAGE_TAG=${NE_IMAGE_TAG:-2.10.0}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - nuvlabox-db:/srv/nuvlaedge/shared

  agent:
    <<: *common
    entrypoint: agent
    restart: always
    container_name: ${COMPOSE_PROJECT_NAME:-nuvlaedge}-agent
    oom_kill_disable: true
    privileged: true
    environment:
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME:-nuvlaedge}
      - NUVLAEDGE_UUID=${NUVLAEDGE_UUID}
      - NUVLAEDGE_LOG_LEVEL=${NUVLAEDGE_LOG_LEVEL:-INFO}
      - NUVLAEDGE_API_KEY=${NUVLAEDGE_API_KEY:-}
      - NUVLAEDGE_API_SECRET=${NUVLAEDGE_API_SECRET:-}
      - NUVLAEDGE_EXCLUDED_MONITORS=${NUVLAEDGE_EXCLUDED_MONITORS:-}
      - NUVLAEDGE_THREAD_MONITORS=${NUVLAEDGE_THREAD_MONITORS:-False}
      - NUVLAEDGE_IMMUTABLE_SSH_PUB_KEY=${NUVLAEDGE_SSH_PUB_KEY:-}
      - NUVLAEDGE_JOB_ENGINE_LITE_IMAGE
      - HOST_HOME=${HOME}
      - VPN_INTERFACE_NAME=${VPN_INTERFACE_NAME:-vpn}
      - VPN_CONFIG_EXTRA
      - NUVLA_ENDPOINT=${NUVLA_ENDPOINT:-nuvla.io}
      - NUVLA_ENDPOINT_INSECURE=${NUVLA_ENDPOINT_INSECURE:-False}
      - NE_IMAGE_REGISTRY
      - NE_IMAGE_ORGANIZATION
      - NE_IMAGE_REPOSITORY
      - NE_IMAGE_TAG=${NE_IMAGE_TAG:-2.10.0}
      - NE_IMAGE_INSTALLER
      # Below variables are not directly used by agent but are here
      # to be sent to Nuvla so they are not lost when updating NE
      - NUVLAEDGE_COMPUTE_API_ENABLE
      - NUVLAEDGE_VPN_CLIENT_ENABLE
      - NUVLAEDGE_JOB_ENABLE
      - COMPUTE_API_PORT
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - nuvlabox-db:/srv/nuvlaedge/shared
      - /:/rootfs:ro

  compute-api:
    <<: *common
    entrypoint: api
    restart: on-failure
    container_name: ${COMPOSE_PROJECT_NAME:-nuvlaedge}-compute-api
    deploy:
      replicas: ${NUVLAEDGE_COMPUTE_API_ENABLE:-1}
    oom_score_adj: -900
    pid: "host"
    environment:
      - HOST=${HOSTNAME:-nuvlaedge}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - nuvlabox-db:/srv/nuvlaedge/shared
    ports:
      - "0.0.0.0:${COMPUTE_API_PORT:-}:5000"
    healthcheck:
      test: netstat -tulpn | grep LISTEN | grep 5000 | grep socat
      interval: 20s
      timeout: 10s
      start_period: 30s

  vpn-client:
    <<: *common
    entrypoint: openvpn-client
    restart: always
    container_name: ${COMPOSE_PROJECT_NAME:-nuvlaedge}-vpn-client
    deploy:
      replicas: ${NUVLAEDGE_VPN_CLIENT_ENABLE:-1}
    oom_kill_disable: true
    network_mode: host
    privileged: true
    devices:
      - /dev/net/tun
    environment:
      - NUVLAEDGE_UUID=${NUVLAEDGE_UUID}
    volumes:
      - nuvlabox-db:/srv/nuvlaedge/shared
    depends_on:
      - agent

  job-engine-lite:
    <<: *common
    restart: always
    container_name: ${COMPOSE_PROJECT_NAME:-nuvlaedge}-job-engine-lite
    deploy:
      replicas: ${NUVLAEDGE_JOB_ENABLE:-0}
    entrypoint: my_init
    command:
      - /app/pause.py
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
